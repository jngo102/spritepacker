name: Publish
on: [push, pull_request]

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      RELEASE_UPLOAD_URL: ${{ steps.create_release.outputs.output_url }}

    steps:
      - uses: actions/checkout@v3
      - name: Get version
        run: echo "APP_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.APP_VERSION }}
          release_name: "Sprite Packer v${{ env.APP_VERSION }}"
          body: "Sprite Packer has released another version.\n\nChangelog:\n-"
          draft: false
          prerelease: false
  build:
    needs: create-release
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Build
        run: cargo build --release
      - name: Upload release asset Unix
        if: matrix.platform != 'windows-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.RELEASE_UPLOAD_URL }}
          asset_path: target/release/spritepacker
          asset_name: spritepacker_${{ matrix.platform }}
          asset_content_type: application/octet-stream
      - name: Upload release asset Windows
        if: matrix.platform == 'windows-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: target/release/spritepacker.exe
          asset_name: spritepacker_${{ matrix.platform }}.exe
          asset_content_type: application/octet-stream
