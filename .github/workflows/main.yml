name: Publish
on: [push, pull_request]

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      RELEASE_UPLOAD_URL: ${{ steps.create_release.outputs.upload_url }}

    steps:
      - uses: actions/checkout@v3
      - name: Get version
        run: echo "APP_VERSION=$(cat Cargo.toml | grep version | head -1 | cut -d' ' -f3 | tr -d '\"')" >> $GITHUB_ENV
      - name: Get ChangeLog
        run: |
          VERSIONS=$(grep "^## \[.*]" ChangeLog.md)
          FIRST_TWO=$(echo "$VERSIONS" | head -2)
          START=$(echo "$FIRST_TWO" | head -1 | sed -e 's/[]\/$*.^[]/\\&/g')
          END=$(echo "$FIRST_TWO" | tail -1 | sed -e 's/[]\/$*.^[]/\\&/g')
          BODY=$(sed -n -r "/$START/,/$END/p" ChangeLog.md | head -n -1)
          echo "CHANGELOG=$BODY" >> $GITHUB_ENV
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.APP_VERSION }}
          release_name: "Sprite Packer v${{ env.APP_VERSION }}"
          body: ${{ env.CHANGELOG }}
          draft: false
          prerelease: false
  build:
    needs: create-release
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Install Ubuntu dependencies
        if: matrix.platform == 'ubuntu-latest'
        run: sudo apt-get install -y libgtk-3-dev
      - name: Build
        run: cargo build --release
      - name: Upload release asset Unix
        if: matrix.platform != 'windows-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.RELEASE_UPLOAD_URL }}
          asset_path: target/release/spritepacker
          asset_name: spritepacker_${{ matrix.platform }}
          asset_content_type: application/octet-stream
      - name: Upload release asset Windows
        if: matrix.platform == 'windows-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.RELEASE_UPLOAD_URL }}
          asset_path: target/release/spritepacker.exe
          asset_name: spritepacker_${{ matrix.platform }}.exe
          asset_content_type: application/octet-stream
